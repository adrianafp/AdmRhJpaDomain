package uy.org.aladi.admrh.jpadomain.entities;

// Generated 03/10/2014 04:02:51 PM by Hibernate Tools 3.4.0.CR1

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.ManyToOne;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.Size;

/**
 * Gplanta generated by hbm2java
 */
@Entity
@Table(name = "gplanta", uniqueConstraints = @UniqueConstraint(columnNames = "Tarjeta"))
public class Gplanta implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -2558077844365356019L;
	private Long idGplanta;
	private Ggrados ggrados;
	private Gorganigrama gorganigrama;
	private Gcategorias gcategorias;
	private FbancosModocobro fbancosModocobro;
	private Fmutualistasplanes fmutualistasplanes;
	private Short tarjeta;
	private String nombre;
	private String documento;
	private String nacionalidad;
	private Date ingreso;
	private Date egreso;
	private String ctacte;
	private String nroSocio;
	private Boolean reembolso;
	private Boolean marcas;
	private Boolean fonasa;
	private Boolean ultimoIngreso;
	private Boolean egresoFinanzas;
	private Boolean ultimoEgreso;
	private Date fechaNacimiento;
	private Boolean cambioSueldoMes;
	private String sexo;
	private Boolean subrogante;
	private String fotourl;
	private List<Fparamfuncionario> fparamfuncionarios = new ArrayList<Fparamfuncionario>();
	private List<Fmovimientos> fmovimientos = new ArrayList<Fmovimientos>();
	private List<Fadpermanentes> fadpermanentes = new ArrayList<Fadpermanentes>();
	private List<Gcargas> gcargas = new ArrayList<Gcargas>();
	private List<Fafiliaciones> fafiliaciones = new ArrayList<Fafiliaciones>();
	private List<Fadicionesdescf> fadicionesdescf = new ArrayList<Fadicionesdescf>();
	private List<Fsueldomes> fsueldomes = new ArrayList<Fsueldomes>();
	private List<Fprestamos> fprestamos = new ArrayList<Fprestamos>(0);
	private List<Fprestamosconsumo> fprestamosconsumo = new ArrayList<Fprestamosconsumo>(
			0);
	private List<Fafaladiprestamos> fprestamosAfaladi = new ArrayList<Fafaladiprestamos>();
	private Fsaldos fsaldos;
	private Fsaldosacum fsaldosacum;
	private List<Fsaldosultimomes> fsaldosultimomes = new ArrayList<Fsaldosultimomes>(
			0);
	private List<Fcostoaladianual> fcostoaladianual = new ArrayList<Fcostoaladianual>(
			0);
	private List<Finteresesdistrib> finteresesdistrib = new ArrayList<Finteresesdistrib>(
			0);
	private List<Fresultadosdistribucion> fresultadosdistrib = new ArrayList<Fresultadosdistribucion>();
	private List<Rmarcames> rmarcames = new ArrayList<Rmarcames>(0);
	private List<Rmarcanio> rmarcanio = new ArrayList<Rmarcanio>(0);
	private List<Rajusteanio> rajusteanio = new ArrayList<Rajusteanio>(0);
	private List<Rausentes> rausentes = new ArrayList<Rausentes>(0);

	public Gplanta() {
	}

	public Gplanta(short tarjeta) {
		this.tarjeta = tarjeta;
	}

	public Gplanta(Ggrados ggrados, Gorganigrama gorganigrama,
			Gcategorias gcategorias, FbancosModocobro fbancosModocobro,
			Fmutualistasplanes fmutualistasplanes, Short tarjeta,
			String nombre, String documento, String nacionalidad, Date ingreso,
			Date egreso, String ctacte, String nroSocio, Boolean reembolso,
			Boolean marcas, Boolean fonasa, Boolean ultimoIngreso, Boolean egresoFinanzas,
			Boolean ultimoEgreso, Date fechaNacimiento,
			Boolean cambioSueldoMes, String sexo, String fotourl,
			Fsaldos fsaldos, Fcabezalrecibos fcabezalrecibos, Fsaldosacum fsaldosacum,
			List<Fmovimientos> fmovimientoses, 
			List<Fadpermanentes> fadpermanenteses, 
			List<Fadicionesdescf> fadicionesdescfs,
			List<Fsueldomes> fsueldosmes,
			List<Fsaldosultimomes> fsaldosultimomeses,
			List<Gcargas> gcargas,
			List<Fparamfuncionario> fparamfuncionarios,
			List<Fcostoaladianual> fcostoaladianuals,
			List<Finteresesdistrib> finteresesdistribs,
			List<Rmarcames> rmarcameses, List<Rmarcanio> rmarcanios,
			List<Fprestamos> fprestamoses, List<Rajusteanio> rajusteanios, List<Rhorarios> rhorarios,
			List<Fprestamosconsumo> fprestamosconsumos,
			List<Fafaladiprestamos> fafaladiprestamos,
			List<Rausentes> rausenteses) {
		this.tarjeta = tarjeta;
		this.nombre = nombre;
		this.documento = documento;
		this.nacionalidad = nacionalidad;
		this.ingreso = ingreso;
		this.egreso = egreso;
		this.ctacte = ctacte;
		this.nroSocio = nroSocio;
		this.reembolso = reembolso;
		this.marcas = marcas;
		this.fonasa = fonasa;
		this.ultimoIngreso = ultimoIngreso;
		this.egresoFinanzas = egresoFinanzas;
		this.ultimoEgreso = ultimoEgreso;
		this.fechaNacimiento = fechaNacimiento;
		this.cambioSueldoMes = cambioSueldoMes;
		this.sexo = sexo;
		this.fotourl = fotourl;
		this.ggrados = ggrados;
		this.gcategorias = gcategorias;
		this.gorganigrama = gorganigrama;
		this.fbancosModocobro = fbancosModocobro;
		this.gcargas = gcargas;
		this.setFparamfuncionarios(fparamfuncionarios);
		this.fmovimientos = fmovimientoses;
		this.fsaldos = fsaldos;
		this.fadpermanentes = fadpermanenteses;
		this.fadicionesdescf = fadicionesdescfs;
		this.fsueldomes = fsueldosmes;
		this.fmutualistasplanes = fmutualistasplanes;
		this.fsaldosacum = fsaldosacum;
		this.fsaldosultimomes = fsaldosultimomeses;
		this.fcostoaladianual = fcostoaladianuals;
		this.finteresesdistrib = finteresesdistribs;
		this.rmarcames = rmarcameses;
		this.rmarcanio = rmarcanios;
		this.fprestamos = fprestamoses;
		this.rajusteanio = rajusteanios;
		this.fprestamosconsumo = fprestamosconsumos;
		this.fprestamosAfaladi = fafaladiprestamos;
		this.rausentes = rausenteses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idGPlanta", unique = true, nullable = false)
	public Long getIdGplanta() {
		return this.idGplanta;
	}

	public void setIdGplanta(Long idGplanta) {
		this.idGplanta = idGplanta;
	}

	@ManyToOne
	@JoinColumn(name = "idGGrados")
	public Ggrados getGgrados() {
		return this.ggrados;
	}

	public void setGgrados(Ggrados ggrados) {
		this.ggrados = ggrados;
	}

	@ManyToOne
	@JoinColumn(name = "idGOrganigrama")
	public Gorganigrama getGorganigrama() {
		return this.gorganigrama;
	}

	public void setGorganigrama(Gorganigrama gorganigrama) {
		this.gorganigrama = gorganigrama;
	}

	@ManyToOne
	@JoinColumn(name = "idGCategoria")
	public Gcategorias getGcategorias() {
		return this.gcategorias;
	}

	public void setGcategorias(Gcategorias gcategorias) {
		this.gcategorias = gcategorias;
	}

	@ManyToOne
	@JoinColumn(name = "idBcoMdoCobro")
	public FbancosModocobro getFbancosModocobro() {
		return this.fbancosModocobro;
	}

	public void setFbancosModocobro(FbancosModocobro fbancosModocobro) {
		this.fbancosModocobro = fbancosModocobro;
	}

	@ManyToOne
	@JoinColumn(name = "idFMutualistasPlanes")
	public Fmutualistasplanes getFmutualistasplanes() {
		return this.fmutualistasplanes;
	}

	public void setFmutualistasplanes(Fmutualistasplanes fmutualistasplanes) {
		this.fmutualistasplanes = fmutualistasplanes;
	}

	@Column(name = "Tarjeta", unique = true, nullable = false)
	public Short getTarjeta() {
		return this.tarjeta;
	}

	public void setTarjeta(Short tarjeta) {
		this.tarjeta = tarjeta;
	}

	@Column(name = "Nombre", length = 30)
	@Size(max = 30)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "Documento", length = 20)
	@Size(max = 20)
	public String getDocumento() {
		return this.documento;
	}

	public void setDocumento(String documento) {
		this.documento = documento;
	}

	@Column(name = "Nacionalidad", length = 15)
	@Size(max = 15)
	public String getNacionalidad() {
		return this.nacionalidad;
	}

	public void setNacionalidad(String nacionalidad) {
		this.nacionalidad = nacionalidad;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "Ingreso", length = 10)
	public Date getIngreso() {
		return this.ingreso;
	}

	public void setIngreso(Date ingreso) {
		this.ingreso = ingreso;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "Egreso", length = 10)
	public Date getEgreso() {
		return this.egreso;
	}

	public void setEgreso(Date egreso) {
		this.egreso = egreso;
	}

	@Column(name = "Ctacte", length = 10)
	@Size(max = 10)
	public String getCtacte() {
		return this.ctacte;
	}

	public void setCtacte(String ctacte) {
		this.ctacte = ctacte;
	}

	@Column(name = "NroSocio", length = 10)
	@Size(max = 10)
	public String getNroSocio() {
		return this.nroSocio;
	}

	public void setNroSocio(String nroSocio) {
		this.nroSocio = nroSocio;
	}

	@Column(name = "Reembolso")
	public Boolean getReembolso() {
		return this.reembolso;
	}

	public void setReembolso(Boolean reembolso) {
		this.reembolso = reembolso;
	}

	@Column(name = "Marcas")
	public Boolean getMarcas() {
		return this.marcas;
	}

	public void setMarcas(Boolean marcas) {
		this.marcas = marcas;
	}

	@Column(name = "UltimoIngreso")
	public Boolean getUltimoIngreso() {
		return this.ultimoIngreso;
	}

	public void setUltimoIngreso(Boolean ultimoIngreso) {
		this.ultimoIngreso = ultimoIngreso;
	}

	@Column(name = "EgresoFinanzas")
	public Boolean getEgresoFinanzas() {
		return this.egresoFinanzas;
	}

	public void setEgresoFinanzas(Boolean egresoFinanzas) {
		this.egresoFinanzas = egresoFinanzas;
	}

	@Column(name = "UltimoEgreso")
	public Boolean getUltimoEgreso() {
		return this.ultimoEgreso;
	}

	public void setUltimoEgreso(Boolean ultimoEgreso) {
		this.ultimoEgreso = ultimoEgreso;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "FechaNacimiento", length = 10)
	public Date getFechaNacimiento() {
		return this.fechaNacimiento;
	}

	public void setFechaNacimiento(Date fechaNacimiento) {
		this.fechaNacimiento = fechaNacimiento;
	}

	@Column(name = "CambioSueldoMes")
	public Boolean getCambioSueldoMes() {
		return this.cambioSueldoMes;
	}

	public void setCambioSueldoMes(Boolean cambioSueldoMes) {
		this.cambioSueldoMes = cambioSueldoMes;
	}

	@Column(name = "Sexo", length = 1)
	public String getSexo() {
		return this.sexo;
	}

	public void setSexo(String sexo) {
		this.sexo = sexo;
	}
	
	@Column(name="Subrogante")
	public Boolean getSubrogante() {
		return subrogante;
	}

	public void setSubrogante(Boolean subrogante) {
		this.subrogante = subrogante;
	}


	@Column(name = "fotourl")
	public String getFotourl() {
		return fotourl;
	}

	public void setFotourl(String fotourl) {
		this.fotourl = fotourl;
	}


	@OneToMany(mappedBy = "gplanta")
	public List<Fparamfuncionario> getFparamfuncionarios() {
		return this.fparamfuncionarios;
	}

	public void setFparamfuncionarios(List<Fparamfuncionario> fparamfuncionarios) {
		this.fparamfuncionarios = fparamfuncionarios;
	}


	@OneToMany(mappedBy = "gplanta")
	public List<Fmovimientos> getFmovimientos() {
		return this.fmovimientos;
	}

	public void setFmovimientos(List<Fmovimientos> fmovimientoses) {
		this.fmovimientos = fmovimientoses;
	}

	@OneToOne(mappedBy = "gplanta")
	public Fsaldos getFsaldos() {
		return this.fsaldos;
	}

	public void setFsaldos(Fsaldos fsaldoses) {
		this.fsaldos = fsaldoses;
	}

	@OneToMany(mappedBy = "gplanta")
	public List<Fadpermanentes> getFadpermanentes() {
		return this.fadpermanentes;
	}

	public void setFadpermanentes(List<Fadpermanentes> fadpermanenteses) {
		this.fadpermanentes = fadpermanenteses;
	}


	@OneToMany(mappedBy = "gplanta", fetch = FetchType.EAGER)
	public List<Gcargas> getGcargas() {
		return this.gcargas;
	}

	public void setGcargas(List<Gcargas> gcargas) {
		this.gcargas = gcargas;
	}

	@OneToMany(mappedBy = "gplanta")
	public List<Fadicionesdescf> getFadicionesdescf() {
		return this.fadicionesdescf;
	}

	public void setFadicionesdescf(List<Fadicionesdescf> fadicionesdescfs) {
		this.fadicionesdescf = fadicionesdescfs;
	}

	@OneToMany(mappedBy = "gplanta")
	public List<Fsueldomes> getFsueldomes() {
		return fsueldomes;
	}

	public void setFsueldomes(List<Fsueldomes> fsueldomes) {
		this.fsueldomes = fsueldomes;
	}

	@OneToOne(mappedBy = "gplanta")
	public Fsaldosacum getFsaldosacum() {
		return this.fsaldosacum;
	}

	public void setFsaldosacum(Fsaldosacum fsaldosacums) {
		this.fsaldosacum = fsaldosacums;
	}

	@OneToMany(mappedBy = "gplanta")
	public List<Fsaldosultimomes> getFsaldosultimomes() {
		return this.fsaldosultimomes;
	}

	public void setFsaldosultimomes(List<Fsaldosultimomes> fsaldosultimomeses) {
		this.fsaldosultimomes = fsaldosultimomeses;
	}


	@OneToMany(mappedBy = "gplanta")
	public List<Fcostoaladianual> getFcostoaladianual() {
		return this.fcostoaladianual;
	}

	public void setFcostoaladianual(List<Fcostoaladianual> fcostoaladianuals) {
		this.fcostoaladianual = fcostoaladianuals;
	}

	@OneToMany(mappedBy = "gplanta")
	public List<Finteresesdistrib> getFinteresesdistrib() {
		return this.finteresesdistrib;
	}

	public void setFinteresesdistrib(List<Finteresesdistrib> finteresesdistribs) {
		this.finteresesdistrib = finteresesdistribs;
	}

	@OneToMany(mappedBy = "gplanta")
	public List<Fresultadosdistribucion> getFresultadosdistrib() {
		return fresultadosdistrib;
	}

	public void setFresultadosdistrib(List<Fresultadosdistribucion> fresultadosdistrib) {
		this.fresultadosdistrib = fresultadosdistrib;
	}

	@OneToMany(mappedBy = "gplanta")
	public List<Rmarcames> getRmarcames() {
		return this.rmarcames;
	}

	public void setRmarcames(List<Rmarcames> rmarcameses) {
		this.rmarcames = rmarcameses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "gplanta")
	public List<Rmarcanio> getRmarcanio() {
		return this.rmarcanio;
	}

	public void setRmarcanio(List<Rmarcanio> rmarcanios) {
		this.rmarcanio = rmarcanios;
	}

	@OneToMany(mappedBy = "gplanta")
	public List<Fprestamos> getFprestamos() {
		return this.fprestamos;
	}

	public void setFprestamos(List<Fprestamos> fprestamoses) {
		this.fprestamos = fprestamoses;
	}


	@OneToMany(fetch = FetchType.LAZY, mappedBy = "gplanta")
	public List<Rajusteanio> getRajusteanio() {
		return this.rajusteanio;
	}

	public void setRajusteanio(List<Rajusteanio> rajusteanios) {
		this.rajusteanio = rajusteanios;
	}
	

	@OneToMany(mappedBy = "gplanta")
	public List<Fprestamosconsumo> getFprestamosconsumo() {
		return this.fprestamosconsumo;
	}

	public void setFprestamosconsumo(List<Fprestamosconsumo> fprestamosconsumos) {
		this.fprestamosconsumo = fprestamosconsumos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "gplanta")
	public List<Rausentes> getRausentes() {
		return this.rausentes;
	}

	public void setRausentes(List<Rausentes> rausenteses) {
		this.rausentes = rausenteses;
	}

	@Column(name = "Fonasa")
	public Boolean getFonasa() {
		return fonasa;
	}

	public void setFonasa(Boolean fonasa) {
		this.fonasa = fonasa;
	}

	@OneToMany(mappedBy = "gplanta")
	public List<Fafaladiprestamos> getFprestamosAfaladi() {
		return fprestamosAfaladi;
	}

	public void setFprestamosAfaladi(List<Fafaladiprestamos> fprestamosAfaladi) {
		this.fprestamosAfaladi = fprestamosAfaladi;
	}

	@OneToMany(mappedBy = "gplanta")
	public List<Fafiliaciones> getFafiliaciones() {
		return fafiliaciones;
	}

	public void setFafiliaciones(List<Fafiliaciones> fafiliaciones) {
		this.fafiliaciones = fafiliaciones;
	}

}
